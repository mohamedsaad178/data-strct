public class MySpecialArrayUtils {
	public static void main (String args[]) {
	
	}
	/* reverse array */
	public static void reverse(int[] arr) {
		for (int i=0;i<(arr.length)/2;i++) {
			int temb;
			temb=arr[i];
			arr[i]=arr[(arr.length)-1-i];
			arr[(arr.length)-1-i]=temb;
		}
	}
	/* sumEvenOdd */
	public static int[] sumEvenOdd(int[] arr) {
		int ans[] = {0,0};
		for(int i=0;i<arr.length;i++) {
			if(arr[i]%2==0) {
				ans[0]+=arr[i];
			}else {
				ans[1]+=arr[i];
			}
		}
		return ans;
	}
	/* average */
	public static double average(int[] arr) {
		double ans=0;
		long total=0;
		for(int i=0;i<arr.length;i++) {
			total +=arr[i];
		}
		ans=(double)total/(arr.length);
		return ans;
	}
	/*    */
	 public static void moveValue(int[] arr, int val) {
		 for(int i=0;i<arr.length;i++) {
			 if(arr[i]==val&&i<arr.length-1) {
				 int j=i+1;
				 while(arr[j]==val&&j<arr.length-1) {
					 j++;
				 }
				 if(j<arr.length) {
				 int temp;
				 temp=arr[i];
				 arr[i]=arr[j];
				 arr[j]=temp;
				 }
			 }
		 }
	 }
	/*    */
	public static int[][] transpose(int[][] arr) {
		int[][] ans = new int[arr[0].length][arr.length];
        for (int i = 0; i < arr.length; i++)
            for (int j = 0; j < arr[0].length; j++)
                ans[j][i] = arr[i][j];
        return ans;
		
	}
}

class Fibonacci { 
   public static int fib(int n) 
    { 
	   int ans=0;
	   if (n == 2) ans=1;
	   else if (n > 2)
		   ans = fib(n-1) + fib(n-2);
	   return ans; 
    }
}
